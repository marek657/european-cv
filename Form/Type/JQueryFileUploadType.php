<?php

namespace Trexima\EuropeanCvBundle\Form\Type;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\Form\FormInterface;
use Symfony\Component\Form\FormView;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\PropertyAccess\PropertyAccess;
use Symfony\Component\PropertyAccess\PropertyAccessor;
use Symfony\Component\Routing\Generator\UrlGeneratorInterface;
use Symfony\Component\Routing\RouterInterface;

/**
 * Input for Dropzonejs AJAX uploads
 */
class JQueryFileUploadType extends AbstractType
{
    /**
     * @var string
     */
    private $uploadUrl;

    /**
     * @var RouterInterface
     */
    private $router;

    /**
     * @var PropertyAccessor
     */
    private $accessor;

    public function __construct(string $uploadUrl, RouterInterface $router)
    {
        $this->uploadUrl = $uploadUrl;
        $this->router = $router;
        $this->accessor = PropertyAccess::createPropertyAccessor();
    }

    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        parent::buildForm($builder, $options); // TODO: Change the autogenerated stub
    }

    public function buildView(FormView $view, FormInterface $form, array $options)
    {
        parent::buildView($view, $form, $options);

        $parentData = $form->getParent()->getData();
        $filename = null;
        if (null !== $parentData) {
            $filename = $this->accessor->getValue($parentData, $view->vars['name']);
        }

        $view->vars['upload_url'] = $this->router->generate($options['upload_route'], array(), UrlGeneratorInterface::ABSOLUTE_URL);
        $view->vars['base_upload_url'] = rtrim($this->uploadUrl, '\\/').'/images/';
        $view->vars['filename'] = $filename;
    }

    public function configureOptions(OptionsResolver $resolver)
    {
        parent::configureOptions($resolver);

        $resolver->setDefaults(array(
            // hidden fields cannot have a required attribute
            'required' => false,
            // Pass errors to the parent
            'error_bubbling' => true,
            'compound' => false,
        ));

        $resolver->setRequired(array(
            'upload_route'
        ));
    }
}